#!/usr/bin/perl -w
# -*- mode: perl; -*-
# $Id: buildinfo.pl,v 1.5 2025/05/26 05:39:45 cvsuser Exp $
# buildinfo generation
#
# Copyright (c) 2024 - 2025, Adam Young.
#
# https://github.com/adamyg/busybox-w32-shims
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# ==end==
#

use strict;
use warnings 'all';
use Getopt::Long;
use POSIX qw(strftime asctime);

my $output      = "buildinfo.h";
my $prefix      = "";

my $package     = "busybox-shims";
my $packagename = "Busybox Windows Shims";
my $version     = "1.0.2";

my $builddate   = undef;
my $buildyear   = undef;
my $buildmonth  = undef;
my $buildmday   = undef;
my $buildnumber = "1";
my $buildtype   = undef;
my $buildtoolchain = undef;
my $iswin64     = undef;

my $help = 0;

Usage() if (0 == GetOptions(
		'output=s'      => \$output,
		'prefix=s'      => \$prefix,
		'package:s'     => \$package,
		'name:s'        => \$packagename,
		'version=s'     => \$version,
		'date=i'        => \$builddate,
		'build=i'       => \$buildnumber,
		'toolchain=s'   => \$buildtoolchain,
		'iswin64=s'     => \$iswin64,
		'type:s'        => \$buildtype,
		'help'          => \$help)
			|| $help);

die "buildinfo: PACKAGE not defined\n"
	if (! $package);

die "buildinfo: PACKAGE_NAME not defined\n"
	if (! $packagename);

$version = "0.0.1"
	if (! $version);

$builddate = strftime('%Y%m%d', localtime)
	if (! $builddate);

($buildyear, $buildmonth, $buildmday) = ($1,$2,$3)
	if ($builddate =~ /^(\d\d\d\d)(\d\d)(\d\d)$/);

die "buildinfo: BUILD_DATE invalid"
	if (! $buildyear);

Generate();

sub
Generate	#()
{
	open(FILE, ">${output}") or
		die "cannot create <${output}> : $!\n";

	my ($version1, $version2, $version3) =
		split(/\./, $version);

	my $timestamp = asctime(localtime);

	$version2 = 0 if (! $version2);
	$version3 = 0 if (! $version3);

	print FILE <<"EOT";
// Auto-generated by Makefile ${timestamp}
#define ${prefix}PACKAGE "${package}"
#define ${prefix}PACKAGE_NAME "${packagename}"
#define ${prefix}VERSION "${version}"
#define ${prefix}VERSION_1 ${version1}
#define ${prefix}VERSION_2 ${version2}
#define ${prefix}VERSION_3 ${version3}
#define ${prefix}VERSION_4 ${buildnumber}
#define ${prefix}BUILD_DATE "${builddate}"
#define ${prefix}BUILD_YEAR "${buildyear}"
#define ${prefix}BUILD_MONTH "${buildmonth}"
#define ${prefix}BUILD_MDAY "${buildmday}"
#define ${prefix}BUILD_NUMBER "${buildnumber}"
EOT

	if ($buildtoolchain) {
		my $buildtoolname = $buildtoolchain;
		$buildtoolname =~ s/^\.//;

		print FILE "#define BUILD_TOOLCHAIN \"${buildtoolchain}\"\n";
		print FILE "#define BUILD_TOOLNAME \"${buildtoolname}\"\n";
		print FILE "#define BUILD_ARCHITECTURE \"x64\"\n"
			if ($buildtoolname =~ /64$/);
	}

	if (defined $iswin64) {
		if ($iswin64 eq 'yes') {
			print FILE "#define BUILD_ISWIN64 1\n";
		} else {
			print FILE "#define BUILD_ISWIN32 1\n";
		}
	}

	if ($buildtype) {
		print FILE "#define BUILD_TYPE \"${buildtype}\"\n";

		die "buildinfo.pm: build type verb 'release' or 'debug' expected.\n"
			if ($buildtype !~ /release/ && $buildtype !~ /debug/);

		die "buildinfo.pm: build type verbs 'release' and 'debug' are mutually exclusive.\n"
			if ($buildtype =~ /release/ && $buildtype =~ /debug/);

		print FILE "#define BUILD_TYPE_RELEASE 1\n"
			if ($buildtype =~ /release/);
		print FILE "#define BUILD_TYPE_DEBUG 1\n"
			if ($buildtype =~ /debug/);
	}

	close(FILE);
}


sub
Usage		# ([message])
{
	print "\nbuildinfo.h @_\n\n" if (@_);
	print <<EOU;

Usage: perl buildinfo.pl [options]

Options:
    --output <file>         Output file.
    --prefix <prefix>       Identifier prefix (optional).
    --package <package>     Package label.
    --name <name>           Package name.
    --version <version>     Package version.
    --date <date>           Build date.
    --build <number>        Build number.
    --toolchain <desc>      Toolchain.
    --help                  Help.

EOU
	exit 3;
}

1;

#end

