#!/usr/bin/perl -w
# -*- mode: perl; -*-
# $Id: busyboxcmds.pl,v 1.5 2025/05/25 04:49:33 cvsuser Exp $
# busybox command line generation
#
# Copyright (c) 2024 - 2025, Adam Young.
#
# https://github.com/adamyg/busybox-w32-shims
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# ==end==
#

use strict;
use warnings 'all';
use Getopt::Long;
use POSIX qw(strftime asctime);
use Capture::Tiny qw(capture capture_merged);

my $output  = "./apps";
my $busybox = "busybox";
my $notcmd  = 0;

my $help    = 0;

Usage() if (0 == GetOptions(
		'output|o=s'    => \$output,
		'busybox|x=s'   => \$busybox,
		'notcmd'        => \$notcmd,
		'help|h'        => \$help)
			|| $help);

Generate();

sub
Generate	#()
{
	# cmd, list
	my %cmdhash;

	if ($notcmd) {
		my ($cmdhelp) = capture_merged {
			system("cmd", "/c help");
		};

		foreach (split(/[\r\n]+/, $cmdhelp)) {
			$cmdhash{lc($1)} = 1 
				if (/^([A-Za-z]+)/);
		}
	}

	$cmdhash{'busybox'} = 1;
	$cmdhash{'install'} = 1;
	$cmdhash{'link'}    = 1;
	$cmdhash{'make'}    = 1;

	# busybox, version
	my ($bxout, $bxerr, $bxexit) = capture {
		system($busybox, "--help");
	};
	(0 == $bxexit) || die "cannot exec <${busybox}> : ${bxexit}\n";
	($bxerr eq '') || die "cannot exec <${busybox}> : ${bxerr}\n";
	my @bxhelp = split(/[\r\n]+/, $bxout);

	# busybox, cmd-list
	($bxout, $bxerr, $bxexit) = capture {
		system($busybox, "--list");
	};

	(0 == $bxexit) || die "cannot exec <${busybox}> : ${bxexit}\n";
	($bxerr eq '') || die "cannot exec <${busybox}> : ${bxerr}\n";
	my @bxcmds = split(/[\r\n]+/, $bxout);

	open(FILE, ">${output}/busyboxcmds.h") or
		die "cannot create <${output}/busyboxcmds.h> : $!\n";
	my $timestamp = asctime(localtime);
	$timestamp = chomp($timestamp);

	# busyboxcmds.h
	print FILE <<"EOT";
// Auto-generated by Makefile ${timestamp}
//
// $bxhelp[0]
// $bxhelp[1]

static const char *busyboxcmds[] = {
EOT

	foreach (@bxcmds) {
		(!/^\[/) || next;
		if (exists $cmdhash{$_}) { # filter cmd's
			print FILE "\t// \"$_\",\n";
		} else {
			print FILE "\t\"$_\",\n";
		}
	}

	print FILE <<"EOT";
	};

//end
EOT
	close(FILE);

	# application shims
	foreach (@bxcmds) {
		(!/^\[/) || next;
		next if (exists $cmdhash{$_});
		my $cmd = $_;

		open(FILE, ">${output}/${cmd}.c") or
			die "cannot create <${output}/${cmd}.c}> : $!\n";

		print FILE <<"SHIM";
// Auto-generated application shim for busybox applet <${cmd}>
//
// Copyright (c) 2025 Adam Young
//
// https://github.com/adamyg/busybox-w32-shims
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//

#include "shim.h"

int
main(void)
{
    ApplicationShim(L"${cmd}", L"busybox.exe");
    return EXIT_FAILURE;
}

//end
SHIM
	}
}


sub
Usage		# ([message])
{
	print "\nbusyboxcmds.pl @_\n\n" if (@_);
	print <<EOU;

Usage: perl busyboxcmds.pl [options]

Options:
    --output <file>         Output file.
    --busybox <path>        busybox executable fullname.
    --notcmd                dont generate shims for duplicate cmd applets.
    --help                  Help.

EOU
	exit 3;
}

1;

#end
